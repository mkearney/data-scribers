<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coolbutuselessgithubio on {data-scribers}</title>
    <link>https://data-scribers.mikewk.com/tags/coolbutuselessgithubio/</link>
    <description>Recent content in Coolbutuselessgithubio on {data-scribers}</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://data-scribers.mikewk.com/tags/coolbutuselessgithubio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating fractals with ggplot2 and patchwork</title>
      <link>https://data-scribers.mikewk.com/post/creating-fractals-with-ggplot2/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/creating-fractals-with-ggplot2/</guid>
      <description>Methods for generating fractals so far: This inspired me to continue my series on creating fractals out of constructs in R&amp;hellip;</description>
    </item>
    
    <item>
      <title>engroupify</title>
      <link>https://data-scribers.mikewk.com/post/engroupify/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/engroupify/</guid>
      <description>I needed to create a special mutate function that uses the dplyr groups if they’re defined, otherwise it should calculate over the entire data. I couldn’t find anything online on how to do this, so I came with a solution&amp;hellip;</description>
    </item>
    
    <item>
      <title>Writing a function which respects `dplyr</title>
      <link>https://data-scribers.mikewk.com/post/writing-a-function-which-respe/</link>
      <pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/writing-a-function-which-respe/</guid>
      <description>I need to create a special mutate function that uses the dplyr groups if they’re defined, otherwise it should calculate over the entire data&amp;hellip;</description>
    </item>
    
    <item>
      <title>Introducing the `memoisetools` package</title>
      <link>https://data-scribers.mikewk.com/post/introducing-the-memoisetools-p/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/introducing-the-memoisetools-p/</guid>
      <description>For the problem I was working on, the function produced many small results and a few very very large results (greater than 2GB is size). If all the big results were cached I’d run out of memory! In the following example, results over 1000 bytes will not be cached&amp;hellip;</description>
    </item>
    
    <item>
      <title>Memoisation</title>
      <link>https://data-scribers.mikewk.com/post/memoisation/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/memoisation/</guid>
      <description>Memoisation allows the caching of the output for a function for a given set of inputs. This technique is really useful when a function takes a long time to execute&amp;hellip;</description>
    </item>
    
    <item>
      <title>Writing a nonogram solver in R</title>
      <link>https://data-scribers.mikewk.com/post/writing-a-nonogram-solver-in-r/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/writing-a-nonogram-solver-in-r/</guid>
      <description>Nonograms are picture logic puzzles in which cells in a grid must be colored or left blank according to numbers at the side of the grid to reveal a hidden picture. In this short series of posts I will: A clue is sequence of integers which are the run-length encoding of the filled-in squares in a row or column&amp;hellip;</description>
    </item>
    
    <item>
      <title>Creating nonograms with &#39;nonogram&#39; and &#39;magick&#39; packages</title>
      <link>https://data-scribers.mikewk.com/post/creating-nonograms-with-nonogr/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/creating-nonograms-with-nonogr/</guid>
      <description>Nonograms are picture logic puzzles in which cells in a grid must be colored or left blank according to numbers at the side of the grid to reveal a hidden picture&amp;hellip;</description>
    </item>
    
    <item>
      <title>Nonograms in R - &#39;nonogram&#39; package</title>
      <link>https://data-scribers.mikewk.com/post/nonograms-in-r-nonogram-packag/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/nonograms-in-r-nonogram-packag/</guid>
      <description>Nonograms are picture logic puzzles in which cells in a grid must be colored or left blank according to numbers at the side of the grid to reveal a hidden picture. In this short series of posts I will: This is a basic example which shows you how to plot and solve a simple puzzle&amp;hellip;</description>
    </item>
    
    <item>
      <title>The Zombie/Vampire Apocalypse - A use case for strict membership tests</title>
      <link>https://data-scribers.mikewk.com/post/the-zombievampire-apocalypse-a/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/the-zombievampire-apocalypse-a/</guid>
      <description>Rather than R letting you know when your membership test is no longer up-to-date, the user must remain vigilant with every data update to ensure that it is still valid i.e&amp;hellip;</description>
    </item>
    
    <item>
      <title>Find all sequences of a given length with the given sum</title>
      <link>https://data-scribers.mikewk.com/post/find-all-sequences-of-a-given-/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/find-all-sequences-of-a-given-/</guid>
      <description>This problem popped up as a necessary step to solving a type of puzzle (which I’ll post about&amp;hellip;</description>
    </item>
    
    <item>
      <title>A stricter `%in%`</title>
      <link>https://data-scribers.mikewk.com/post/a-stricter-in/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/a-stricter-in/</guid>
      <description>I’m not trying to be as elegant as he is, so I’m just going to make something work in isolation&amp;hellip;</description>
    </item>
    
    <item>
      <title>strict `case_when`</title>
      <link>https://data-scribers.mikewk.com/post/strict-casewhen/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/strict-casewhen/</guid>
      <description>I want to eliminate ways in which errors or oversights can creep in, so I’d like special handling for the following cases: Before starting, let me state clearly that My main use case for this strict version is ensuring that continuous values are correctly turned into categories, when using complicated rules involving multiple&amp;hellip;</description>
    </item>
    
    <item>
      <title>bits and bit reversal</title>
      <link>https://data-scribers.mikewk.com/post/bits-and-bit-reversal/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/bits-and-bit-reversal/</guid>
      <description>I have a sequence of values in R and I want to reverse the bits in each value. Problem dimensions: For a vector of raw bytes I want: That is, each byte within a vector of values is unmoved, but each byte has its bits reversed&amp;hellip;</description>
    </item>
    
    <item>
      <title>gganimate with sprites</title>
      <link>https://data-scribers.mikewk.com/post/gganimate-with-sprites/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/gganimate-with-sprites/</guid>
      <description>A sprite is a 2d bitmap often used by games to represent objects&amp;hellip;</description>
    </item>
    
    <item>
      <title>gganimate with bitmap fonts</title>
      <link>https://data-scribers.mikewk.com/post/gganimate-with-bitmap-fonts/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-scribers.mikewk.com/post/gganimate-with-bitmap-fonts/</guid>
      <description>I put together the little animation shown below, and this is a short guide on how I got there&amp;hellip;</description>
    </item>
    
  </channel>
</rss>